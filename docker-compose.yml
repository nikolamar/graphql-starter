version: "3.6"

services:
  web:
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8080/graphql
    build:
      context: ./web
    depends_on:
      - server
    ports:
      - "3000:3000"
    stdin_open: true
    volumes:
      - ./web:/usr/src/app/web
      - /usr/src/app/web/node_modules

  server:
    environment:
      PORT: 8080
      REDIS_URL: redis://:redis@redis:6379
      CORS_ORIGIN: http://localhost:3000
      ACCESS_TOKEN_SECRET: sdf9wmrisjr89wjr8923rjkojri9wej
      REFRESH_TOKEN_SECRET: 0serms9f4w0fk-nbpgssjgd89gjer04g
      DATABASE_URL: postgresql://admin:password@postgres:5432/d2
      DOMAIN: .domain.com
    build:
      context: ./server
    depends_on:
      - postgres
      - redis
      - pgadmin
    restart: always
    ports:
      - "8080:8080"
    volumes:
      - ./server:/usr/src/app/server
      - /usr/src/app/server/node_modules
      - /usr/src/app/server/public

  postgres:
    image: postgres:11
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql
      - ./dbscripts/postgres:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_DB: d2
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"

  pgadmin:
    image: dpage/pgadmin4:4.30
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@mail.com
      PGADMIN_DEFAULT_PASSWORD: password
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    links:
      - "postgres:server"
    ports:
      - "5050:80"

  redis:
    image: redis:6
    hostname: redis
    command: ["redis-server", "--appendonly", "yes", "--requirepass", "redis"]
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
      - redis-dump:/var/lib/redis

volumes:
  postgres-data:
  pgadmin-data:
  redis-data:
  redis-dump:
